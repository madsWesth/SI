#graphql
schema {
  query: Query
  mutation: Mutation
  subscription: Subscription
}

type User {
  id: ID!
  email: String!
  password: String!
}

type blog {
  id: ID!
  title: String!
  description: String!
  completed: Boolean!
}

type blogResult {
  errors: [String]
  blog: blog
}

type blogsResult {
  errors: [String]
  blogs: [blog]
}

type InsertResult {
  errors: [String]
  id: ID
}

type TokenResult {
  errors: [String]
  token: String
}

type Query {
  blogs: blogsResult!
  blog(blogId: ID!): blogResult!
}

type Mutation {
  createblog(title: String!, description: String!): InsertResult!
  createUser(email: String!, password: String!): InsertResult!
  createToken(email: String!, password: String!): TokenResult!
}

# doing these would require me to rewrite the app because it is not supported by startStandaloneServer from
# apollo/server
# event based "updates" can be sent over websockets protocol
# type Subscription {
#   reviewblog(token: String!): InsertResult!
# }
